// Generated by Dagger (https://google.github.io/dagger).
package com.example.androidproject.di.module;

import com.example.androidproject.util.SchedulerProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModule_ProvideSchedulerProvider$app_debugFactory
    implements Factory<SchedulerProvider> {
  private final AppModule module;

  public AppModule_ProvideSchedulerProvider$app_debugFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public SchedulerProvider get() {
    return provideInstance(module);
  }

  public static SchedulerProvider provideInstance(AppModule module) {
    return proxyProvideSchedulerProvider$app_debug(module);
  }

  public static AppModule_ProvideSchedulerProvider$app_debugFactory create(AppModule module) {
    return new AppModule_ProvideSchedulerProvider$app_debugFactory(module);
  }

  public static SchedulerProvider proxyProvideSchedulerProvider$app_debug(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.provideSchedulerProvider$app_debug(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
