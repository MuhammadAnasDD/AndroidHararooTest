// Generated by Dagger (https://google.github.io/dagger).
package com.example.androidproject.data.network;

import com.google.gson.Gson;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class AppApiHelper_Factory implements Factory<AppApiHelper> {
  private final Provider<ApiHeader> apiHeaderProvider;

  private final Provider<Gson> mGsonProvider;

  public AppApiHelper_Factory(Provider<ApiHeader> apiHeaderProvider, Provider<Gson> mGsonProvider) {
    this.apiHeaderProvider = apiHeaderProvider;
    this.mGsonProvider = mGsonProvider;
  }

  @Override
  public AppApiHelper get() {
    return provideInstance(apiHeaderProvider, mGsonProvider);
  }

  public static AppApiHelper provideInstance(
      Provider<ApiHeader> apiHeaderProvider, Provider<Gson> mGsonProvider) {
    AppApiHelper instance = new AppApiHelper(apiHeaderProvider.get());
    AppApiHelper_MembersInjector.injectMGson(instance, mGsonProvider.get());
    return instance;
  }

  public static AppApiHelper_Factory create(
      Provider<ApiHeader> apiHeaderProvider, Provider<Gson> mGsonProvider) {
    return new AppApiHelper_Factory(apiHeaderProvider, mGsonProvider);
  }

  public static AppApiHelper newAppApiHelper(ApiHeader apiHeader) {
    return new AppApiHelper(apiHeader);
  }
}
