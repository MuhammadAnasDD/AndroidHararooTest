// Generated by Dagger (https://google.github.io/dagger).
package com.example.androidproject.ui.main.interactor;

import com.example.androidproject.data.network.ApiHelper;
import com.example.androidproject.data.preferences.PreferenceHelper;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class MainInteractorImpl_Factory implements Factory<MainInteractorImpl> {
  private final Provider<PreferenceHelper> preferenceHelperProvider;

  private final Provider<ApiHelper> apiHelperProvider;

  public MainInteractorImpl_Factory(
      Provider<PreferenceHelper> preferenceHelperProvider, Provider<ApiHelper> apiHelperProvider) {
    this.preferenceHelperProvider = preferenceHelperProvider;
    this.apiHelperProvider = apiHelperProvider;
  }

  @Override
  public MainInteractorImpl get() {
    return provideInstance(preferenceHelperProvider, apiHelperProvider);
  }

  public static MainInteractorImpl provideInstance(
      Provider<PreferenceHelper> preferenceHelperProvider, Provider<ApiHelper> apiHelperProvider) {
    return new MainInteractorImpl(preferenceHelperProvider.get(), apiHelperProvider.get());
  }

  public static MainInteractorImpl_Factory create(
      Provider<PreferenceHelper> preferenceHelperProvider, Provider<ApiHelper> apiHelperProvider) {
    return new MainInteractorImpl_Factory(preferenceHelperProvider, apiHelperProvider);
  }

  public static MainInteractorImpl newMainInteractorImpl(
      PreferenceHelper preferenceHelper, ApiHelper apiHelper) {
    return new MainInteractorImpl(preferenceHelper, apiHelper);
  }
}
