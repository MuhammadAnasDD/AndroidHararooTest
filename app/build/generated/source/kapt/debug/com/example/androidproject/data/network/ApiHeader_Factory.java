// Generated by Dagger (https://google.github.io/dagger).
package com.example.androidproject.data.network;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ApiHeader_Factory implements Factory<ApiHeader> {
  private final Provider<ApiHeader.ProtectedApiHeader> protectedApiHeaderProvider;

  private final Provider<ApiHeader.PublicApiHeader> publicApiHeaderProvider;

  public ApiHeader_Factory(
      Provider<ApiHeader.ProtectedApiHeader> protectedApiHeaderProvider,
      Provider<ApiHeader.PublicApiHeader> publicApiHeaderProvider) {
    this.protectedApiHeaderProvider = protectedApiHeaderProvider;
    this.publicApiHeaderProvider = publicApiHeaderProvider;
  }

  @Override
  public ApiHeader get() {
    return provideInstance(protectedApiHeaderProvider, publicApiHeaderProvider);
  }

  public static ApiHeader provideInstance(
      Provider<ApiHeader.ProtectedApiHeader> protectedApiHeaderProvider,
      Provider<ApiHeader.PublicApiHeader> publicApiHeaderProvider) {
    return new ApiHeader(protectedApiHeaderProvider.get(), publicApiHeaderProvider.get());
  }

  public static ApiHeader_Factory create(
      Provider<ApiHeader.ProtectedApiHeader> protectedApiHeaderProvider,
      Provider<ApiHeader.PublicApiHeader> publicApiHeaderProvider) {
    return new ApiHeader_Factory(protectedApiHeaderProvider, publicApiHeaderProvider);
  }

  public static ApiHeader newApiHeader(
      ApiHeader.ProtectedApiHeader protectedApiHeader, ApiHeader.PublicApiHeader publicApiHeader) {
    return new ApiHeader(protectedApiHeader, publicApiHeader);
  }
}
