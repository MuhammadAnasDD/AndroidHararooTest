// Generated by Dagger (https://google.github.io/dagger).
package com.example.androidproject.data.network;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ApiHeader_ProtectedApiHeader_Factory
    implements Factory<ApiHeader.ProtectedApiHeader> {
  private final Provider<String> authTokenProvider;

  public ApiHeader_ProtectedApiHeader_Factory(Provider<String> authTokenProvider) {
    this.authTokenProvider = authTokenProvider;
  }

  @Override
  public ApiHeader.ProtectedApiHeader get() {
    return provideInstance(authTokenProvider);
  }

  public static ApiHeader.ProtectedApiHeader provideInstance(Provider<String> authTokenProvider) {
    return new ApiHeader.ProtectedApiHeader(authTokenProvider.get());
  }

  public static ApiHeader_ProtectedApiHeader_Factory create(Provider<String> authTokenProvider) {
    return new ApiHeader_ProtectedApiHeader_Factory(authTokenProvider);
  }

  public static ApiHeader.ProtectedApiHeader newProtectedApiHeader(String authToken) {
    return new ApiHeader.ProtectedApiHeader(authToken);
  }
}
