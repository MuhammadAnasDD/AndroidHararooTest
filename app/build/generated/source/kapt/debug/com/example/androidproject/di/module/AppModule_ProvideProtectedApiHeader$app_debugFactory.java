// Generated by Dagger (https://google.github.io/dagger).
package com.example.androidproject.di.module;

import com.example.androidproject.data.network.ApiHeader;
import com.example.androidproject.data.preferences.PreferenceHelper;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideProtectedApiHeader$app_debugFactory
    implements Factory<ApiHeader.ProtectedApiHeader> {
  private final AppModule module;

  private final Provider<String> apiKeyProvider;

  private final Provider<PreferenceHelper> preferenceHelperProvider;

  public AppModule_ProvideProtectedApiHeader$app_debugFactory(
      AppModule module,
      Provider<String> apiKeyProvider,
      Provider<PreferenceHelper> preferenceHelperProvider) {
    this.module = module;
    this.apiKeyProvider = apiKeyProvider;
    this.preferenceHelperProvider = preferenceHelperProvider;
  }

  @Override
  public ApiHeader.ProtectedApiHeader get() {
    return provideInstance(module, apiKeyProvider, preferenceHelperProvider);
  }

  public static ApiHeader.ProtectedApiHeader provideInstance(
      AppModule module,
      Provider<String> apiKeyProvider,
      Provider<PreferenceHelper> preferenceHelperProvider) {
    return proxyProvideProtectedApiHeader$app_debug(
        module, apiKeyProvider.get(), preferenceHelperProvider.get());
  }

  public static AppModule_ProvideProtectedApiHeader$app_debugFactory create(
      AppModule module,
      Provider<String> apiKeyProvider,
      Provider<PreferenceHelper> preferenceHelperProvider) {
    return new AppModule_ProvideProtectedApiHeader$app_debugFactory(
        module, apiKeyProvider, preferenceHelperProvider);
  }

  public static ApiHeader.ProtectedApiHeader proxyProvideProtectedApiHeader$app_debug(
      AppModule instance, String apiKey, PreferenceHelper preferenceHelper) {
    return Preconditions.checkNotNull(
        instance.provideProtectedApiHeader$app_debug(apiKey, preferenceHelper),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
