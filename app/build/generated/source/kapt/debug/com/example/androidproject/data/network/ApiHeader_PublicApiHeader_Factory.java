// Generated by Dagger (https://google.github.io/dagger).
package com.example.androidproject.data.network;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ApiHeader_PublicApiHeader_Factory implements Factory<ApiHeader.PublicApiHeader> {
  private final Provider<String>
      apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider;

  public ApiHeader_PublicApiHeader_Factory(
      Provider<String>
          apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider) {
    this.apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider =
        apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider;
  }

  @Override
  public ApiHeader.PublicApiHeader get() {
    return provideInstance(
        apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider);
  }

  public static ApiHeader.PublicApiHeader provideInstance(
      Provider<String>
          apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider) {
    return new ApiHeader.PublicApiHeader(
        apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider.get(),
        apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider.get(),
        apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider.get(),
        apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider.get(),
        apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider.get(),
        apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider.get());
  }

  public static ApiHeader_PublicApiHeader_Factory create(
      Provider<String>
          apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider) {
    return new ApiHeader_PublicApiHeader_Factory(
        apiVersionAndAppVersionAndContentTypeAndDeviceIdAndDevicePlatformAndLanguageProvider);
  }

  public static ApiHeader.PublicApiHeader newPublicApiHeader(
      String language,
      String deviceId,
      String devicePlatform,
      String appVersion,
      String apiVersion,
      String contentType) {
    return new ApiHeader.PublicApiHeader(
        language, deviceId, devicePlatform, appVersion, apiVersion, contentType);
  }
}
